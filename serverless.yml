service: youareawesomeapp
# app and org for use with dashboard.serverless.com
app: youareawesomeapp
org: prosingularity

plugins:
  - serverless-plugin-typescript
  - serverless-offline # must come after typescript

# only deploy with specific Serverless version
frameworkVersion: ^2.48.0
configValidationMode: error
useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-central-1
  stage: prod

functions:
  reportInappropriate:
    handler: src/report-inappropriate.handler
    events:
      - http:
          path: "/reportinappropriate/"
          method: post
    environment:
      SMTP_HOST: ${env:SMTP_HOST}
      SMTP_USERNAME: ${env:SMTP_USERNAME}
      SMTP_PASSWORD: ${env:SMTP_PASSWORD}
      SMTP_PORT: ${env:SMTP_PORT}
      USE_SSL: ${env:USE_SSL}
      TO_EMAILS_CSV: ${env:TO_EMAILS_CSV}
      FROM_ADDRESS: ${env:FROM_ADDRESS}

  registerPushNotif:
    handler: src/register-push-notification.handler
    events:
      - http:
          path: "/push-notifications/register/"
          method: post
    environment:
      CRON_JOB_NAME_PREFIX: "yaa-push-notifications-"
      PUSH_NOTIFICATIONS_BACKEND_URI: ${env:PUSH_NOTIFICATIONS_BACKEND_URI}
      EASY_CRON_API_TOKEN: ${env:EASY_CRON_API_TOKEN}
      HASH_PASSWORD: ${env:HASH_PASSWORD}
      SYMMETRIC_ENCRYPTION_KEY: ${env:SYMMETRIC_ENCRYPTION_KEY}

  unregisterPushNotif:
    handler: src/unregister-push-notification.handler
    events:
      - http:
          path: "/push-notifications/unregister/"
          method: post
    environment:
      CRON_JOB_NAME_PREFIX: "yaa-push-notifications-"
      EASY_CRON_API_TOKEN: ${env:EASY_CRON_API_TOKEN}
      HASH_PASSWORD: ${env:HASH_PASSWORD}

# https://www.serverless.com/framework/docs/providers/aws/guide/resources/
resources:
  Resources:
    CurrentMessageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-current-message
    legal:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-legal
